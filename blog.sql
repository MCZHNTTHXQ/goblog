# ************************************************************
# Sequel Pro SQL dump
# Version 4541
#
# http://www.sequelpro.com/
# https://github.com/sequelpro/sequelpro
#
# Host: 127.0.0.1 (MySQL 5.7.31)
# Database: blog
# Generation Time: 2021-09-07 11:47:08 +0000
# ************************************************************


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


# Dump of table category
# ------------------------------------------------------------

DROP TABLE IF EXISTS `category`;

CREATE TABLE `category` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL DEFAULT '',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

LOCK TABLES `category` WRITE;
/*!40000 ALTER TABLE `category` DISABLE KEYS */;

INSERT INTO `category` (`id`, `name`, `created_at`, `updated_at`)
VALUES
	(1,'技术','2021-08-15 14:09:06','2021-09-05 19:17:53'),
	(2,'产品','2021-08-15 14:09:31','2021-08-15 14:09:35'),
	(3,'生活笔记','2021-08-15 14:09:42','2021-08-15 14:09:42');

/*!40000 ALTER TABLE `category` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table page
# ------------------------------------------------------------

DROP TABLE IF EXISTS `page`;

CREATE TABLE `page` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `ident` varchar(20) NOT NULL DEFAULT '''''',
  `title` varchar(100) NOT NULL,
  `content` longtext,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

LOCK TABLES `page` WRITE;
/*!40000 ALTER TABLE `page` DISABLE KEYS */;

INSERT INTO `page` (`id`, `ident`, `title`, `content`)
VALUES
	(1,'about','关于我','### 为梦想而努力！\r\n#### 一线互联网码农，热衷探究技术背后的原理。喜欢情景喜剧、相声、小品，阅读，终生学习者。\r\n\r\n### 其他平台\r\n* Github：https://github.com/convee\r\n* 知乎主页：https://www.zhihu.com/people/convee/activities\r\n* 微信公众号：穿西装的程序员\r\n\r\n### 联系我\r\n* Gmail: convee.cn@gmail.com'),
	(2,'read','阅读清单','### 为梦想而努力！\r\n| 序号  | 书籍  | 进度  |\r\n| ------------ | ------------ |\r\n| 1 | 《高性能MySQL》 |  20% |\r\n| 2 | 《PHP7内核剖析》  |  30% |\r\n| 3 | 《ElasticSearch源码解析与优化实践》  |  30% |\r\n| 4 | 《深入理解Kafka》  |  30% |\r\n| 5 | 《Go程序设计语言》  |  30% |\r\n| 6 | 《labuladong的算法小抄》  |  30% |\r\n');

/*!40000 ALTER TABLE `page` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table post
# ------------------------------------------------------------

DROP TABLE IF EXISTS `post`;

CREATE TABLE `post` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `title` varchar(200) NOT NULL DEFAULT '',
  `status` tinyint(1) NOT NULL DEFAULT '0',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  `category_id` int(11) NOT NULL DEFAULT '0',
  `is_top` tinyint(1) NOT NULL DEFAULT '0',
  `tag_ids` json NOT NULL,
  `views` int(11) NOT NULL DEFAULT '0',
  `description` varchar(2000) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

LOCK TABLES `post` WRITE;
/*!40000 ALTER TABLE `post` DISABLE KEYS */;

INSERT INTO `post` (`id`, `title`, `status`, `created_at`, `updated_at`, `category_id`, `is_top`, `tag_ids`, `views`, `description`)
VALUES
	(1,'技术文章',1,'2021-08-15 14:08:59','2021-08-18 17:20:27',1,0,X'5B325D',75,'产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。'),
	(2,'技术文章',1,'2021-08-15 14:08:59','2021-08-18 17:22:53',1,0,X'5B345D',166,'DreamGo 是一个新手学习用的博客系统。计划实现三个版本1'),
	(3,'技术文章',1,'2021-08-15 14:08:59','2021-08-18 17:12:58',1,0,X'5B335D',24,'产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。'),
	(4,'技术文章',1,'2021-08-15 14:08:59','2021-08-18 17:12:58',1,0,X'5B315D',11,'产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。'),
	(5,'博客',1,'2021-08-15 14:08:59','2021-08-18 17:12:58',1,0,X'5B315D',15,'产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。'),
	(6,'技术文章',1,'2021-08-15 14:08:59','2021-08-18 17:12:58',1,0,X'5B315D',10,'产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。'),
	(7,'技术文章',1,'2021-08-15 14:08:59','2021-08-18 17:12:58',1,0,X'5B315D',9,'产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。'),
	(8,'技术文章',1,'2021-08-15 14:08:59','2021-08-18 17:12:58',1,0,X'5B315D',9,'产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。'),
	(9,'技术文章',1,'2021-08-15 14:08:59','2021-08-18 17:12:58',1,0,X'5B315D',8,'产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。');

/*!40000 ALTER TABLE `post` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table post_content
# ------------------------------------------------------------

DROP TABLE IF EXISTS `post_content`;

CREATE TABLE `post_content` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `content` longtext,
  `post_id` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

LOCK TABLES `post_content` WRITE;
/*!40000 ALTER TABLE `post_content` DISABLE KEYS */;

INSERT INTO `post_content` (`id`, `content`, `post_id`)
VALUES
	(1,'产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。产品经理如何绘制产品架构图，这里有很多的学问，包括需求、业务流程等等。。',1),
	(2,'#### 关于 DreamGO\r\nDreamGo 是一个新手学习用的博客系统。计划实现三个版本：\r\n\r\n1. 不使用框架，基于标准库 `net/http` 实现；\r\n2. 使用第三方路由，比如 https://github.com/gorilla/mux 或 https://github.com/julienschmidt/httprouter 实现；\r\n3. 使用一个 Web 框架，可能考虑使用 Beego，因为国内貌似用这个的比较多，满足广大 gopher 的要求；\r\n\r\n数据源计划支持三种方式，尽可能让大家练习使用 Go 语言操作常用的存储：\r\n\r\n1. 将文章存在 Github Repo 上；\r\n2. 将文章存入 MySQL 中；\r\n3. 将文字存入 MongoDB 中；\r\n\r\n```php\r\n<?php\r\necho \'hello world\';\r\n```\r\n\r\n```go\r\nfunc getTrue() bool {\r\n    return true\r\n}\r\n```\r\n\r\nName    | Age\r\n--------|------\r\nBob     | 27\r\nAlice   | 23',2),
	(3,'# 一、流程图 \r\n概要说明 \r\n\r\n\r\n由于请求腾讯接口到拿到响应耗时比较长，接近20ms，因此影响了 AdServing 释放广告 。经过广告主和腾讯协希望 RM 支持离线查询 。由于腾讯目前不支持批量导入数据查询，只能经过 http 接口，一次查询一个设备 ID 。活动启动之前，RM 抽取初始数据包 ，请求腾讯接口，获取设备的得分，存储在本地，作为缓存使用 。 由于腾讯该服务的碰撞率大概只有 30% ，初始包不可能包含所有设备ID ，因此，RM 在处理实时广告流量时，如果从本地缓存中查询不到设备 ID ，则将设备 ID 发送给 kafka ，由消费程序异步请求腾讯接口，获取用户得分后写入到缓存中 。\r\n腾讯接口返回的得分具有时效性 ，测试期间设置为5天 。 使用和更新的时候，需要考虑有效期 。 \r\n\r\n\r\n# 二、资源\r\n1、硬件 \r\n目前测试环境可以支持 ，无需另外购置 ； \r\n\r\n\r\n2、软件 \r\n（1）、模拟请求腾讯接口程序 4 人/天 \r\n（2）、AdServing核心功能开发 1 人/天 \r\n**11月13号可以完成开发 ，联调时间跟腾讯协商； **\r\n\r\n\r\n3、存储体量预估 \r\n单条缓存按照 64字节 ，一个设备ID按照 36 字节 （IMEI 32 ，IDFA 40 ，oaid 长度不一）。如果存储30亿设备ID ，文件大小大概是 300 G ，存储到 scylladb 大小无法预估 。 \r\n\r\n\r\n4、2千万设备ID模拟请求，大概需要 3-4 个小时  。 【量级跟设备ID个数线性相关】 \r\n\r\n\r\n# 三、缓存格式 \r\n```go\r\n设备ID ： 6CB9C98F694397855494E5EAF45126F1 \r\nvalue ： \r\n   [\r\n        {\r\n            \"modelId\": 5128,\r\n            \"score\": 10,\r\n            \"ttl\":5\r\n        },\r\n        {\r\n            \"modelId\": 5129,\r\n            \"score\": 9,\r\n            \"ttl\":5\r\n        }\r\n    ]\r\n\r\n```\r\n存贮形式简化成下面\r\n```go\r\n设备ID ： 6CB9C98F694397855494E5EAF45126F1 \r\nvalue ： [\"5128|10|5\", \"5129|9|5\"]\r\n          \r\n```\r\n参数说明 ： \r\n \r\nttl 有效期 ，时间戳 ，录入到系统，往后第5天的23：59：59秒对应的时间戳 \r\nmodel : 模型ID \r\nscore ： 模型对应的分数 \r\n\r\n\r\n',3),
	(4,'> 最近在面试过程中被面试官问到 Redis 集群数据是如何复制的，由于之前没有准备直接懵了。\n> 事后查了查这个问题其实也挺简单，如果你之前也不知道，没问题，赶紧浅尝辄止，速度 3 遍即可入门。\n\n\n\n阅读本文，你可能会有哪些收获呢？\n\n\n- 首先，你会知道有三种集群模式\n- 然后对每种集群模式的原理有个大概了解\n- 当然还能看到集群演变的影子\n- 最后还会有手把手的实操\n\n\n\n**Redis 支持三种集群方案**\n\n\n- 主从复制模式\n- Sentinel（哨兵）模式\n- Cluster 模式\n\n\n\n## Redis 集群的三种模式\n\n\n### 主从复制模式\n\n\n\n\n#### 主从复制的作用\n\n\n通过持久化功能，Redis 保证了即使在服务器重启的情况下也不会丢失（或少量丢失）数据，因为持久化会把内存中数据保存到硬盘上，重启会从硬盘上加载数据。 但是由于数据是存储在一台服务器上的，如果这台服务器出现硬盘故障等问题，也会导致数据丢失。\n\n\n为了避免单点故障，通常的做法是将数据库复制多个副本以部署在不同的服务器上，这样即使有一台服务器出现故障，其他服务器依然可以继续提供服务。\n\n\n为此， **Redis 提供了复制（replication）功能，可以实现当一台数据库中的数据更新后，自动将更新的数据同步到其他数据库上**。\n\n\n在复制的概念中，数据库分为两类，一类是主数据库（master），另一类是从数据库 (slave）。主数据库可以进行读写操作，当写操作导致数据变化时会自动将数据同步给从数据库。而从数据库一般是只读的，并接受主数据库同步过来的数据。一个主数据库可以拥有多个从数据库，而一个从数据库只能拥有一个主数据库。\n\n\n**总结：引入主从复制机制的目的有两个**\n\n\n- 一个是读写分离，分担 \"master\" 的读写压力\n- 一个是方便做容灾恢复\n\n\n\n#### **主从复制原理**\n\n\n\n\n- 从数据库启动成功后，连接主数据库，发送 SYNC 命令；\n- 主数据库接收到 SYNC 命令后，开始执行 BGSAVE 命令生成 RDB 文件并使用缓冲区记录此后执行的所有写命令；\n- 主数据库 BGSAVE 执行完后，向所有从数据库发送快照文件，并在发送期间继续记录被执行的写命令；\n- 从数据库收到快照文件后丢弃所有旧数据，载入收到的快照；\n- 主数据库快照发送完毕后开始向从数据库发送缓冲区中的写命令；\n- 从数据库完成对快照的载入，开始接收命令请求，并执行来自主数据库缓冲区的写命令；（**从数据库初始化完成**）\n- 主数据库每执行一个写命令就会向从数据库发送相同的写命令，从数据库接收并执行收到的写命令（**从数据库初始化完成后的操作**）\n- 出现断开重连后，2.8 之后的版本会将断线期间的命令传给重数据库，增量复制。\n- 主从刚刚连接的时候，进行全量同步；全同步结束后，进行增量同步。当然，如果有需要，slave 在任何时候都可以发起全量同步。Redis 的策略是，无论如何，首先会尝试进行增量同步，如不成功，要求从机进行全量同步。\n\n\n\n#### 主从复制优缺点\n\n\n**主从复制优点**\n\n\n- 支持主从复制，主机会自动将数据同步到从机，可以进行读写分离；\n- 为了分载 Master 的读操作压力，Slave 服务器可以为客户端提供只读操作的服务，写服务仍然必须由 Master 来完成；\n- Slave 同样可以接受其它 Slaves 的连接和同步请求，这样可以有效的分载 Master 的同步压力；\n- Master Server 是以非阻塞的方式为 Slaves 提供服务。所以在 Master-Slave 同步期间，客户端仍然可以提交查询或修改请求；\n- Slave Server 同样是以非阻塞的方式完成数据同步。在同步期间，如果有客户端提交查询请求，Redis 则返回同步之前的数据；\n\n\n\n**主从复制缺点**\n\n\n- Redis 不具备自动容错和恢复功能，主机从机的宕机都会导致前端部分读写请求失败，需要等待机器重启或者手动切换前端的 IP 才能恢复（**也就是要人工介入**）；\n- 主机宕机，宕机前有部分数据未能及时同步到从机，切换 IP 后还会引入数据不一致的问题，降低了系统的可用性；\n- 如果多个 Slave 断线了，需要重启的时候，尽量不要在同一时间段进行重启。因为只要 Slave 启动，就会发送 sync 请求和主机全量同步，当多个 Slave 重启的时候，可能会导致 Master IO 剧增从而宕机。\n- Redis 较难支持在线扩容，在集群容量达到上限时在线扩容会变得很复杂；\n\n\n\n### Sentinel（哨兵）模式\n\n\n第一种主从同步 / 复制的模式，当主服务器宕机后，需要手动把一台从服务器切换为主服务器，这就需要人工干预，费事费力，还会造成一段时间内服务不可用。这不是一种推荐的方式，更多时候，我们优先考虑哨兵模式。\n\n\n哨兵模式是一种特殊的模式，首先 Redis 提供了哨兵的命令，**哨兵是一个独立的进程，作为进程，它会独立运行。其原理是哨兵通过发送命令，等待 Redis 服务器响应，从而监控运行的多个 Redis 实例**。\n\n\n\n\n#### **哨兵模式的作用**\n\n\n- 通过发送命令，让 Redis 服务器返回监控其运行状态，包括主服务器和从服务器；\n- 当哨兵监测到 master 宕机，会自动将 slave 切换成 master ，然后通过**发布订阅模式**通知其他的从服务器，修改配置文件，让它们切换主机；\n\n\n\n然而一个哨兵进程对 Redis 服务器进行监控，也可能会出现问题，为此，我们可以使用多个哨兵进行监控。各个哨兵之间还会进行监控，这样就形成了多哨兵模式。\n\n\n\n\n#### **故障切换的过程**\n\n\n假设主服务器宕机，哨兵 1 先检测到这个结果，系统并不会马上进行 failover 过程，仅仅是哨兵 1 主观的认为主服务器不可用，这个现象成为**主观下线**。当后面的哨兵也检测到主服务器不可用，并且数量达到一定值时，那么哨兵之间就会进行一次投票，投票的结果由一个哨兵发起，进行 failover 操作。切换成功后，就会通过发布订阅模式，让各个哨兵把自己监控的从服务器实现切换主机，这个过程称为**客观下线**。这样对于客户端而言，一切都是透明的。\n\n\n#### 哨兵模式的工作方式：\n\n\n- 每个 Sentinel（哨兵）进程以每秒钟一次的频率向整个集群中的 Master 主服务器，Slave 从服务器以及其他 Sentinel（哨兵）进程发送一个 PING 命令。\n- 如果一个实例（instance）距离最后一次有效回复 PING 命令的时间超过 down-after-milliseconds 选项所指定的值， 则这个实例会被 Sentinel（哨兵）进程标记为主观下线（SDOWN）\n- 如果一个 Master 主服务器被标记为主观下线（SDOWN），则正在监视这个 Master 主服务器的所有 Sentinel（哨兵）进程要以每秒一次的频率确认 Master 主服务器的确进入了主观下线状态\n- 当有足够数量的 Sentinel（哨兵）进程（大于等于配置文件指定的值）在指定的时间范围内确认 Master 主服务器进入了主观下线状态（SDOWN）， 则 Master 主服务器会被标记为客观下线（ODOWN）\n- 在一般情况下， 每个 Sentinel（哨兵）进程会以每 10 秒一次的频率向集群中的所有 Master 主服务器、Slave 从服务器发送 INFO 命令。\n- 当 Master 主服务器被 Sentinel（哨兵）进程标记为客观下线（ODOWN）时，Sentinel（哨兵）进程向下线的 Master 主服务器的所有 Slave 从服务器发送 INFO 命令的频率会从 10 秒一次改为每秒一次。\n- 若没有足够数量的 Sentinel（哨兵）进程同意 Master 主服务器下线， Master 主服务器的客观下线状态就会被移除。若 Master 主服务器重新向 Sentinel（哨兵）进程发送 PING 命令返回有效回复，Master 主服务器的主观下线状态就会被移除。\n\n\n\n#### 哨兵模式的优缺点\n\n\n**优点：**\n\n\n- 哨兵模式是基于主从模式的，所有主从的优点，哨兵模式都具有。\n- 主从可以自动切换，系统更健壮，可用性更高 (**可以看作自动版的主从复制**)。\n\n\n\n**缺点：**\n\n\n- Redis 较难支持在线扩容，在集群容量达到上限时在线扩容会变得很复杂。\n\n\n\n### Cluster 集群模式（Redis 官方）\n\n\nRedis Cluster 是一种服务器 Sharding 技术，3.0 版本开始正式提供。\n\n\nRedis 的哨兵模式基本已经可以实现高可用，读写分离 ，但是在这种模式下每台 Redis 服务器都存储相同的数据，很浪费内存，所以在 redis3.0 上加入了 Cluster 集群模式，实现了 Redis 的分布式存储，**也就是说每台 Redis 节点上存储不同的内容**。\n\n\n![3059625723-1fd0756181b4f40f.png](https://cdn.nlark.com/yuque/0/2021/png/562696/1624464426221-23e423d5-e9ac-4862-bd8f-30594fdc419f.png#clientId=u19ab788f-bcfd-4&from=ui&id=ube68cd40&margin=%5Bobject%20Object%5D&name=3059625723-1fd0756181b4f40f.png&originHeight=322&originWidth=686&originalType=binary&ratio=2&size=220325&status=done&style=none&taskId=u17f176d0-0b68-4fae-979c-90ea23052ed)\n\n\n在这个图中，每一个蓝色的圈都代表着一个 redis 的服务器节点。它们任何两个节点之间都是相互连通的。客户端可以与任何一个节点相连接，然后就可以访问集群中的任何一个节点。对其进行存取和其他操作。\n\n\n#### **集群的数据分片**\n\n\nRedis 集群没有使用一致性 hash，而是引入了哈希槽【hash slot】的概念。\n\n\nRedis 集群有 16384 个哈希槽，每个 key 通过 CRC16 校验后对 16384 取模来决定放置哪个槽。集群的每个节点负责一部分 hash 槽，举个例子，比如当前集群有 3 个节点，那么：\n\n\n- 节点 A 包含 0 到 5460 号哈希槽\n- 节点 B 包含 5461 到 10922 号哈希槽\n- 节点 C 包含 10923 到 16383 号哈希槽\n\n\n\n这种结构很容易添加或者删除节点。比如如果我想新添加个节点 D ， 我需要从节点 A， B， C 中得部分槽到 D 上。如果我想移除节点 A ，需要将 A 中的槽移到 B 和 C 节点上，然后将没有任何槽的 A 节点从集群中移除即可。由于从一个节点将哈希槽移动到另一个节点并不会停止服务，所以无论添加删除或者改变某个节点的哈希槽的数量都不会造成集群不可用的状态。\n\n\n在 Redis 的每一个节点上，都有这么两个东西，一个是插槽（slot），它的的取值范围是：0-16383。还有一个就是 cluster，可以理解为是一个集群管理的插件。当我们的存取的 Key 到达的时候，Redis 会根据 CRC16 的算法得出一个结果，然后把结果对 16384 求余数，这样每个 key 都会对应一个编号在 0-16383 之间的哈希槽，通过这个值，去找到对应的插槽所对应的节点，然后直接自动跳转到这个对应的节点上进行存取操作。\n\n\n#### Redis 集群的主从复制模型\n\n\n为了保证高可用，redis-cluster 集群引入了主从复制模型，一个主节点对应一个或者多个从节点，当主节点宕机的时候，就会启用从节点。当其它主节点 ping 一个主节点 A 时，如果半数以上的主节点与 A 通信超时，那么认为主节点 A 宕机了。如果主节点 A 和它的从节点 A1 都宕机了，那么该集群就无法再提供服务了。\n\n\n#### **集群的特点**\n\n\n- 所有的 redis 节点彼此互联 (PING-PONG 机制)，内部使用二进制协议优化传输速度和带宽。\n- 节点的 fail 是通过集群中超过半数的节点检测失效时才生效。\n- 客户端与 Redis 节点直连，不需要中间代理层. 客户端不需要连接集群所有节点，连接集群中任何一个可用节点即可。\n\n---\n\n> 理论课结束了，不如实操下感受一下？\n\n\n\n## 手把手体验集群配置\n\n\n前提条件\n\n\n- 安装 redis， 我从[Redis 官网](http://www.redis.cn/download.html)下载的最新版 redis-5.0.5\n- linux 环境，我用的 centos 7.7， VM 环境\n$ cd /opt\n$ wget [http://download.redis.io/releases/redis-5.0.5.tar.gz](http://download.redis.io/releases/redis-5.0.5.tar.gz)\n$ tar xzf redis-5.0.5.tar.gz\n$ cd redis-5.0.5\n$ make\n$ make install\n# redis 准备\n\n\n生产环境做集群一般会采用多个独立主机，这里做演示在一台虚拟机上同时运行多个节点的，这点注意一下。\n\n\n### 主从复制\n\n\n主要有两步\n\n\n- 准备 master/slave 配置文件\n- 先启动 master 再启动 slave，进行验证\n\n\n\n##### 集群规划\n| 节点 | 配置文件 | 端口 |\n| --- | --- | --- |\n| master | redis6379.conf | 6379 |\n| slave1 | redis6380.conf | 6380 |\n| slave1 | redis6381.conf | 6380 |\n\n\n\n##### 配置文件\n\n\n内容如下\n\n\n```\n# redis6379.conf    master\n# 包含命令，有点复用的意思\ninclude /opt/redis-5.0.5/redis.conf\npidfile /var/run/redis_6379.pid\nport    6379\ndbfilename dump6379.rdb\nlogfile \"my-redis-6379.log\"\n # redis6380.conf    slave1\ninclude /opt/redis-5.0.5/redis.conf\npidfile /var/run/redis_6380.pid\nport    6380\ndbfilename dump6380.rdb\nlogfile \"my-redis-6380.log\"\n# 最后一行设置了主节点的 ip 端口\nreplicaof 127.0.0.1 6379\n # redis6381.conf    slave2\ninclude /opt/redis-5.0.5/redis.conf\npidfile /var/run/redis_6381.pid\nport    6381\ndbfilename dump6381.rdb\nlogfile \"my-redis-6381.log\"\n# 最后一行设置了主节点的 ip 端口\nreplicaof 127.0.0.1 6379\n #\ndaemonize yes\n```\n\n\n![](https://segmentfault.com/img/remote/1460000022808585#id=Q6tD6&originalType=binary&ratio=1&status=done&style=none)\n\n\n##### 启动节点\n\n\n启动节点，然后查看节点信息\n\n\n```\n# 顺序启动节点\n$ redis-server redis6379.conf\n$ redis-server redis6380.conf\n$ redis-server redis6381.conf\n # 进入redis 客户端，开多个窗口查看方便些\n$ redis-cli -p 6379\n$ info replication\n```\n\n\n**info replication** 命令可以查看连接该数据库的其它库的信息，可看到有两个 slave 连接到 master\n\n\n##### 数据同步验证\n\n\n**在 master 节点设置值，在 slave1/slave2 节点可以查看数据同步情况**\n\n\n```\n $ redis-cli -p 6379\n127.0.0.1:6379> set k1 v1\nOK\n\n\n$ redis-cli -p 6380\n127.0.0.1:6380> get k1\n\"v1\"\n```\n\n\n### Sentinel（哨兵）模式\n\n\n上面也说了哨兵其实主动复制的自动版，所以需要先配置好主从复制，不同点在于要增加几个哨兵进行监控。\n\n\n主要有两步：\n\n\n- 准备主从复制集群，并启动\n- 增加哨兵配置，启动验证\n\n\n\n##### 集群规划\n\n\n一般来说，哨兵模式的集群是：一主，二从，三哨兵。\n\n\n那咱们就来演示一下三个哨兵的集群。\n\n| 节点 | 配置 | 端口 |\n| --- | --- | --- |\n| master | redis6379.conf | 6379 |\n| slave1 | redis6380.conf | 6380 |\n| slave2 | redis6381.conf | 6381 |\n| sentinel1 | sentinel1.conf | 26379 |\n| sentinel2 | sentinel2.conf | 26380 |\n| sentinel3 | sentinel3.conf | 26381 |\n\n\n\n##### 哨兵配置\n\n\n哨兵的配置其实跟 redis.conf 有点像，可以看一下自带的 `sentinel.conf`\n\n\n这里咱们创建三个哨兵文件， **哨兵文件的区别在于启动端口不同**\n\n\n```\n port 26379\nsentinel monitor mymaster 127.0.0.1 6379 1\n\nport 26380\nsentinel monitor mymaster 127.0.0.1 6379 1\n\nport 26381\nsentinel monitor mymaster 127.0.0.1 6379 1\n```\n\n\n\n\n##### 启动哨兵\n\n\n先把 master-slave 启动！\n\n\n然后，挨个把三个都启动了\n\n\n```\n$ redis-sentinel sentinel1.conf\n$ redis-sentinel sentinel2.conf\n$ redis-sentinel sentinel3.conf\n```\n\n\n启动之后日志如下，可以看到监听到的主 / 从节点情况以及哨兵集群情况\n\n\n\n\n##### 主节点下线模拟\n\n\n我们在 master(6379) 节点 执行 `shutdown`，然后观察哨兵会帮我做什么？\n\n\n可以看到哨兵扫描到了 master 下线， 然后经过一系列判断，投票等操作重新选举了 master(6381) 节点\n\n\n\n\n\n\n可以查看到，6381 已成为 master\n\n\n\n\n\n\n然后我们可以看到， 即使我们把原 master 节点恢复运行， 它也只是 slave 身份了存在了， 失去了大哥的身份， 可谓是风水轮流转了\n\n\n\n\n\n\n### Cluster 集群模式\n\n\nRedis 的 Cluster 集群模式， 启动还挺简单\n\n\n主要有两步\n\n\n- 配置文件\n- 启动验证\n\n\n\n##### 集群规划\n\n\n根据官方推荐，集群部署至少要 3 台以上的 master 节点，最好使用 3 主 3 从六个节点的模式。\n\n| 节点 | 配置 | 端口 |\n| --- | --- | --- |\n| cluster-master1 | redis7001.conf | 7001 |\n| cluster-master2 | redis7002.conf | 7002 |\n| cluster-master3 | redis7003.conf | 7003 |\n| cluster-slave1 | redis7004.conf | 7004 |\n| cluster-slave2 | redis7006.conf | 7005 |\n| cluster-slave3 | redis7006.conf | 7006 |\n\n\n\n##### 配置文件\n\n\n咱们准备 6 个配置文件 ，端口 7001，7002，7003，7004，7005，7006\n\n\n分别命名成 redis7001.conf ......redis7006.conf\n\n\nredis7001.conf 配置文件内容如下 (记得复制 6 份并替换端口号)\n\n\n```\n# 端口\nport 7001  \n# 启用集群模式\ncluster-enabled yes \n# 根据你启用的节点来命名，最好和端口保持一致，这个是用来保存其他节点的名称，状态等信息的\ncluster-config-file nodes_7001.conf \n# 超时时间\ncluster-node-timeout 5000\nappendonly yes\n# 后台运行\ndaemonize yes\n# 非保护模式\nprotected-mode no \npidfile  /var/run/redis_7001.pid\n```\n\n\n##### 启动 redis 节点\n\n\n- 挨个启动节点\nredis-server redis7001.conf\n...\nredis-server redis7006.conf\n\n\n\n看以下启动情况\n\n\n![](https://segmentfault.com/img/remote/1460000022808591#id=wiciR&originalType=binary&ratio=1&status=done&style=none)\n\n\n- 启动集群\n$ redis-cli --cluster create 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 127.0.0.1:7006 --cluste    r-replicas 1\n# 执行命令\n# --cluster-replicas 1 命令的意思是创建master的时候同时创建一个slave\n# 执行成功结果如下\n# 我们可以看到 7001，7002，7003 成为了 master 节点，\n# 分别占用了 slot [0-5460]，[5461-10922]，[10923-16383]\n> Performing hash slots allocation on 6 nodes...\nMaster[0] -> Slots 0 - 5460\nMaster[1] -> Slots 5461 - 10922\nMaster[2] -> Slots 10923 - 16383\nAdding replica 127.0.0.1:7005 to 127.0.0.1:7001\nAdding replica 127.0.0.1:7006 to 127.0.0.1:7002\nAdding replica 127.0.0.1:7004 to 127.0.0.1:7003\n\n> Trying to optimize slaves allocation for anti-affinity\n[WARNING] Some slaves are in the same host as their master\nM: 0313641a28e42014a48cdaee47352ce88a2ae083 127.0.0.1:7001\nslots:[0-5460] (5461 slots) master\nM: 4ada3ff1b6dbbe57e7ba94fe2a1ab4a22451998e 127.0.0.1:7002\nslots:[5461-10922] (5462 slots) master\nM: 719b2f9daefb888f637c5dc4afa2768736241f74 127.0.0.1:7003\nslots:[10923-16383] (5461 slots) master\nS: 987b3b816d3d1bb07e6c801c5048b0ed626766d4 127.0.0.1:7004\nreplicates 4ada3ff1b6dbbe57e7ba94fe2a1ab4a22451998e\nS: a876e977fc2ff9f18765a89c12fbd2c5b5b1f3bf 127.0.0.1:7005\nreplicates 719b2f9daefb888f637c5dc4afa2768736241f74\nS: ac8d6c4067dec795168ca705bf16efaa5f04095a 127.0.0.1:7006\nreplicates 0313641a28e42014a48cdaee47352ce88a2ae083\nCan I set the above configuration? (type \'yes\' to accept): yes\n\n# 这里有个要手动输入 yes 确认的过程\n> Nodes configuration updated\nAssign a different config epoch to each node\nSending CLUSTER MEET messages to join the cluster\nWaiting for the cluster to join\n...\n\n> Performing Cluster Check (using node 127.0.0.1:7001)\nM: 0313641a28e42014a48cdaee47352ce88a2ae083 127.0.0.1:7001\nslots:[0-5460] (5461 slots) master\n1 additional replica(s)\nM: 4ada3ff1b6dbbe57e7ba94fe2a1ab4a22451998e 127.0.0.1:7002\nslots:[5461-10922] (5462 slots) master\n1 additional replica(s)\nS: ac8d6c4067dec795168ca705bf16efaa5f04095a 127.0.0.1:7006\nslots: (0 slots) slave\nreplicates 0313641a28e42014a48cdaee47352ce88a2ae083\nS: a876e977fc2ff9f18765a89c12fbd2c5b5b1f3bf 127.0.0.1:7005\nslots: (0 slots) slave\nreplicates 719b2f9daefb888f637c5dc4afa2768736241f74\nM: 719b2f9daefb888f637c5dc4afa2768736241f74 127.0.0.1:7003\nslots:[10923-16383] (5461 slots) master\n1 additional replica(s)\nS: 987b3b816d3d1bb07e6c801c5048b0ed626766d4 127.0.0.1:7004\nslots: (0 slots) slave\nreplicates 4ada3ff1b6dbbe57e7ba94fe2a1ab4a22451998e\n[OK] All nodes agree about slots configuration.\n\n> Check for open slots...\nCheck slots coverage...\n[OK] All 16384 slots covered.\n\n\n\n\n\n\n\n##### 数据验证\n\n\n```\n# 注意 集群模式下要带参数 -c，表示集群，否则不能正常存取数据！！！\n[root@localhost redis-5.0.5]# redis-cli -p 7100 -c\n# 设置 k1 v1\n127.0.0.1:7001> set k1 v1\n-> Redirected to slot [12706] located at 127.0.0.1:7003\nOK\n# 这可以看到集群的特点:把数据存到计算得出的 slot，这里还自动跳到了 7003\n127.0.0.1:7003> get k1\n\"v1\"\n # 我们还回到 7001 获取 k1 试试\n[root@localhost redis-5.0.5]# redis-cli -p 7001 -c\n127.0.0.1:7001> get k1\n-> Redirected to slot [12706] located at 127.0.0.1:7003\n\"v1\"\n# 我们可以看到重定向的过程\n127.0.0.1:7003>\n```\n',4),
	(5,'## go 博客系统\n\n* 语言：go\n* 前端框架：bootstrap\n* 不使用框架，直接使用标准库net/http\n* 全文搜索：elasticsearch \n* 数据库：mysql、mongodb\n* 缓存：redis\n* 文件存储：阿里云 oss、cdn\n* 文章内容展示：markdown\n* markdown 内容处理：https://github.com/russross/blackfriday\n* 压测：wrk\n',5),
	(6,'# Dillinger\n## _The Last Markdown Editor, Ever_\n\n[![N|Solid](https://cldup.com/dTxpPi9lDf.thumb.png)](https://nodesource.com/products/nsolid)\n\n[![Build Status](https://travis-ci.org/joemccann/dillinger.svg?branch=master)](https://travis-ci.org/joemccann/dillinger)\n\nDillinger is a cloud-enabled, mobile-ready, offline-storage compatible,\nAngularJS-powered HTML5 Markdown editor.\n\n- Type some Markdown on the left\n- See HTML in the right\n- ✨Magic ✨\n\n## Features\n\n- Import a HTML file and watch it magically convert to Markdown\n- Drag and drop images (requires your Dropbox account be linked)\n- Import and save files from GitHub, Dropbox, Google Drive and One Drive\n- Drag and drop markdown and HTML files into Dillinger\n- Export documents as Markdown, HTML and PDF\n\nMarkdown is a lightweight markup language based on the formatting conventions\nthat people naturally use in email.\nAs [John Gruber] writes on the [Markdown site][df1]\n\n> The overriding design goal for Markdown\'s\n> formatting syntax is to make it as readable\n> as possible. The idea is that a\n> Markdown-formatted document should be\n> publishable as-is, as plain text, without\n> looking like it\'s been marked up with tags\n> or formatting instructions.\n\nThis text you see here is *actually- written in Markdown! To get a feel\nfor Markdown\'s syntax, type some text into the left window and\nwatch the results in the right.\n\n## Tech\n\nDillinger uses a number of open source projects to work properly:\n\n- [AngularJS] - HTML enhanced for web apps!\n- [Ace Editor] - awesome web-based text editor\n- [markdown-it] - Markdown parser done right. Fast and easy to extend.\n- [Twitter Bootstrap] - great UI boilerplate for modern web apps\n- [node.js] - evented I/O for the backend\n- [Express] - fast node.js network app framework [@tjholowaychuk]\n- [Gulp] - the streaming build system\n- [Breakdance](https://breakdance.github.io/breakdance/) - HTML\nto Markdown converter\n- [jQuery] - duh\n\nAnd of course Dillinger itself is open source with a [public repository][dill]\n on GitHub.\n\n## Installation\n\nDillinger requires [Node.js](https://nodejs.org/) v10+ to run.\n\nInstall the dependencies and devDependencies and start the server.\n\n```sh\ncd dillinger\nnpm i\nnode app\n```\n\nFor production environments...\n\n```sh\nnpm install --production\nNODE_ENV=production node app\n```\n\n## Plugins\n\nDillinger is currently extended with the following plugins.\nInstructions on how to use them in your own application are linked below.\n\n| Plugin | README |\n| ------ | ------ |\n| Dropbox | [plugins/dropbox/README.md][PlDb] |\n| GitHub | [plugins/github/README.md][PlGh] |\n| Google Drive | [plugins/googledrive/README.md][PlGd] |\n| OneDrive | [plugins/onedrive/README.md][PlOd] |\n| Medium | [plugins/medium/README.md][PlMe] |\n| Google Analytics | [plugins/googleanalytics/README.md][PlGa] |\n\n## Development\n\nWant to contribute? Great!\n\nDillinger uses Gulp + Webpack for fast developing.\nMake a change in your file and instantaneously see your updates!\n\nOpen your favorite Terminal and run these commands.\n\nFirst Tab:\n\n```sh\nnode app\n```\n\nSecond Tab:\n\n```sh\ngulp watch\n```\n\n(optional) Third:\n\n```sh\nkarma test\n```\n\n#### Building for source\n\nFor production release:\n\n```sh\ngulp build --prod\n```\n\nGenerating pre-built zip archives for distribution:\n\n```sh\ngulp build dist --prod\n```\n\n## Docker\n\nDillinger is very easy to install and deploy in a Docker container.\n\nBy default, the Docker will expose port 8080, so change this within the\nDockerfile if necessary. When ready, simply use the Dockerfile to\nbuild the image.\n\n```sh\ncd dillinger\ndocker build -t <youruser>/dillinger:${package.json.version} .\n```\n\nThis will create the dillinger image and pull in the necessary dependencies.\nBe sure to swap out `${package.json.version}` with the actual\nversion of Dillinger.\n\nOnce done, run the Docker image and map the port to whatever you wish on\nyour host. In this example, we simply map port 8000 of the host to\nport 8080 of the Docker (or whatever port was exposed in the Dockerfile):\n\n```sh\ndocker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger <youruser>/dillinger:${package.json.version}\n```\n\n> Note: `--capt-add=SYS-ADMIN` is required for PDF rendering.\n\nVerify the deployment by navigating to your server address in\nyour preferred browser.\n\n```sh\n127.0.0.1:8000\n```\n\n## License\n\nMIT\n\n**Free Software, Hell Yeah!**\n\n[//]: # (These are reference links used in the body of this note and get stripped out when the markdown processor does its job. There is no need to format nicely because it shouldn\'t be seen. Thanks SO - http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax)\n\n   [dill]: <https://github.com/joemccann/dillinger>\n   [git-repo-url]: <https://github.com/joemccann/dillinger.git>\n   [john gruber]: <http://daringfireball.net>\n   [df1]: <http://daringfireball.net/projects/markdown/>\n   [markdown-it]: <https://github.com/markdown-it/markdown-it>\n   [Ace Editor]: <http://ace.ajax.org>\n   [node.js]: <http://nodejs.org>\n   [Twitter Bootstrap]: <http://twitter.github.com/bootstrap/>\n   [jQuery]: <http://jquery.com>\n   [@tjholowaychuk]: <http://twitter.com/tjholowaychuk>\n   [express]: <http://expressjs.com>\n   [AngularJS]: <http://angularjs.org>\n   [Gulp]: <http://gulpjs.com>\n\n   [PlDb]: <https://github.com/joemccann/dillinger/tree/master/plugins/dropbox/README.md>\n   [PlGh]: <https://github.com/joemccann/dillinger/tree/master/plugins/github/README.md>\n   [PlGd]: <https://github.com/joemccann/dillinger/tree/master/plugins/googledrive/README.md>\n   [PlOd]: <https://github.com/joemccann/dillinger/tree/master/plugins/onedrive/README.md>\n   [PlMe]: <https://github.com/joemccann/dillinger/tree/master/plugins/medium/README.md>\n   [PlGa]: <https://github.com/RahulHP/dillinger/blob/master/plugins/googleanalytics/README.md>\n',6),
	(8,'# markdown 测试\r\n## 二级标题\r\n### 三级标题 \r\n### 四级标题 \r\n\r\n',13),
	(9,'# markdown测试',14),
	(10,'# 支撑起整个互联网时代的 7 款开源软件\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n开源软件现在成为整个互联网时代的支撑技术，你可能已经无法离开由开源软件构建起来的网络世界了。下面我们就来看看一些最重要的开源技术。\r\n\r\n### 为互联网而生的操作系统linux\r\n\r\nLinux是一款免费的操作系统，诞生于1991年，用户可以通过网络或其他途径免费获得，并可以任意修改其源代码。\r\n\r\n#### linux A\r\n\r\n它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳 定的多用户网络操作系统。这个系统是由全世界各地的成千上万的程序员设计和实现的。其目的是建立不受任何商品化软件的版权制约的、全世界都能自由使用的 Unix兼容产品。\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)   Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading, Test link heading, [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n##### linux B-1\r\n\r\n###### linux B-1-1\r\n\r\n###### linux B-1-2\r\n\r\n##### linux B-2\r\n\r\n###### linux B-2-1\r\n\r\n###### linux B-2-2\r\n\r\n#支撑起整个互联网时代的 7 款开源软件-2\r\n\r\nLinux可以说是已经无处不在，像Android手机就是以Linux为基础开发的，世界上大多的超级计算机也都采用的Linux系统，大多数的 数据中心使用Linux作为其支撑操作系统。谷歌、百度、淘宝等都通过Linuxt提供了我们每天用的互联网服务。Linux在航空控制系统中也扮演着重 要角色。\r\n\r\n###加密互联网的安全协议OpenSSL\r\n\r\nOpenSSL是套开放源代码的软件库包，实现了SSL与TLS协议。OpenSSL可以说是一个基于密码学的安全开发包，囊括了主要的密码算法、常用的密钥和证书封装管理功能以及SSL协议，并提供了丰富的应用程序供测试或其它目的使用。\r\n\r\n也可以说OpenSSL是网络通信提供安全及数据完整性的一种安全协议，SSL可以在Internet上提供秘密性传输，能使用户/服务器应用之间的通信不被攻击者窃听。OpenSSL被网银、在线支付、电商网站、门户网站、电子邮件等重要网站广泛使用。\r\n\r\n去年OpenSSL爆出安全漏洞，因为其应用如此之广，该漏洞爆出让整个互联网都为之震颤。\r\n\r\n### 互联网的记忆——MySQL\r\n\r\nMySQL是一个开源的小型的数据库管理系统，原开发者为瑞典的MySQL AB公司，该公司于2008年被Sun公司收购。2009年，甲骨文公司（Oracle）收购Sun公司，MySQL成为Oracle旗下产品。\r\n\r\n很多信息都是存在数据库里面的，很多工程师在开发一些的小型项目时都会采用这个MySQL数据库。MySQL为C、C++、JAVA、PHP等多重 编程语言提供了API接口。而且支持windows、Mac、Linux等多种系统。这种广泛的支持使其得到更多开发者的青睐，MySQL是开发者需要掌 握的数据库之一。\r\n\r\nMysql最初为小型应用而开发，但现在的Mysql已经不是一个小型数据库了。基本上所有的互联网公司都会使用这个数据库系统，一些金融交易也会 采用Mysql作为数据库引擎。Mysql通过相应的调优既可以支撑大规模的访问，又可以保证数据安全性，已经成为威胁传统商业数据库系统的重要力量。\r\n\r\n### 万能开发工具Eclipse\r\n\r\nEclipse 是一个开放源代码的、基于Java的可扩展开发平台。Eclipse最初由OTI和IBM两家公司的IDE产品开发组创建，起始于1999年4月。目前由 IBM牵头，围绕着Eclipse项目已经发展成为了一个庞大的Eclipse联盟，有150多家软件公司参与到Eclipse项目中，其中包括 Borland、Rational Software、Red Hat及Sybase等。\r\n\r\n就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。很多Java编程软件都是在Eclipse平台开发的，还有包括 Oracle在内的许多大公司也纷纷加入了该项目，并宣称Eclipse将来能成为可进行任何语言开发的IDE集大成者，使用者只需下载各种语言的插件即 可。\r\n\r\nEclipse并不是一个直接服务于消费者的产品，它更像一个工匠手中万用工具，用Eclipse开发者可以打造出各种充满创造性的服务来满足最终用户的需求。\r\n\r\n### 互联网的门卫Apache\r\n\r\nApache HTTP Server（简称Apache）是Apache软件基金会的一个开放源码的网页服务器，可以在大多数计算机操作系统中运行，由于其多平台和安全性被广泛 使用，也是最流行的Web服务器端软件之一，市场占有率达60%左右。它快速、可靠并且可通过简单的API扩展，它可以和各种解释器配合使用，包括 PHP/Perl/Python等。\r\n\r\nApache就像一个负责的门卫，管理着服务器数据的进出。每当你在你的地址栏里输入 http://XXX.com 的时候，在遥远的远端，很有可能正是一台跑着Apache的服务器，将你需要的信息传输给浏览器。\r\n\r\n###大数据的心脏Hadoop\r\n\r\nHadoop 是一个能够对大量数据进行分布式处理的软件框架，由Apache基金会开发。用户可以在不了解分布式底层细节的情况下，开发分布式程序。Hadoop 一 直帮助解决各种问题，包括超大型数据集的排序和大文件的搜索。它还是各种搜索引擎的核心，比如 Amazon 的 A9 和用于查找酒信息 的 Able Grape 垂直搜索引擎。阿里巴巴集团在商品推荐、用户行为分析、信用计算领域也都有hadoop的应用。\r\n\r\n在“大数据”已经成为潮流的当下，Hadoop已经成为最主要的一项技术。可以毫不夸张的说，没有Hadoop，就没有大多数的大数据应用。可以说对一个不知道Hadoop的程序员而言，你已经out了。\r\n\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)   Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading, Test link heading, [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n##### linux B-1\r\n\r\n###### linux B-1-1\r\n\r\n###### linux B-1-2\r\n\r\n##### linux B-2\r\n\r\n###### linux B-2-1\r\n\r\n###### linux B-2-2\r\n\r\n### 互联网的“排版引擎”WebKit\r\n\r\n说是浏览器内核，其实“排版引擎”更容易理解一些。通过服务器传输给浏览器的信息只是一串乱糟糟的文本。要看到我们平时看到精美的网友，需要浏览器内核对这些文本进行解析，将枯燥的描述“画”成美丽的浏览界面。\r\n\r\nWebKit 是一个开源的浏览器引擎，与之相应的引擎有 Gecko（Mozilla Firefox 等使用的排版引擎）和 Trident（也称为 MSHTML，IE 使用的排版引擎）。根据 StatCounter 的浏览器市场份额调查，于2012年11月，Webkit 市占超过了 40%，它已经成为拥有最大市场份额的 排版引擎，超越了 Internet Explorer 所使用的Trident 及 Firefox 所使用的 Gecko 引擎，并且 WebKit 份额正在逐年增加。\r\n\r\n目前几乎所有网站和网银已经逐渐支持 WebKit 。WebKit 内核在手机上的应用也十分广泛，例如苹果的 Safari 、谷歌的 Chrome 浏览器都是基于这个框架来开发的。\r\n\r\n### 小结\r\n\r\n很多人可能尚未意识到，我们使用的电脑中运行有开源软件，手机中运行有开源软件，家里的电视也运行有开源软件，甚至小小的数码产品中也运行有开源软件，尤其是互联网服务器端软件，几乎全部是开源软件。毫不夸张地说，开源软件已经渗透到了我们日常生活的方方面面。\r\n\r\n稿源：[钛媒体](http://www.tmtpost.com/194306.html)\r\n',15),
	(11,'# 支撑起整个互联网时代的 7 款开源软件\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n开源软件现在成为整个互联网时代的支撑技术，你可能已经无法离开由开源软件构建起来的网络世界了。下面我们就来看看一些最重要的开源技术。\r\n\r\n### 为互联网而生的操作系统linux\r\n\r\n```php\r\n<?php\r\n	echo 1;\r\n	die;\r\n?>\r\n```\r\n```json\r\n{\r\n\"a\" :\"b\"\r\n}\r\n```\r\n\r\n#### linux A\r\n\r\n它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳 定的多用户网络操作系统。这个系统是由全世界各地的成千上万的程序员设计和实现的。其目的是建立不受任何商品化软件的版权制约的、全世界都能自由使用的 Unix兼容产品。\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)   Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading, Test link heading, [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n##### linux B-1\r\n\r\n###### linux B-1-1\r\n\r\n###### linux B-1-2\r\n\r\n##### linux B-2\r\n\r\n###### linux B-2-1\r\n\r\n###### linux B-2-2\r\n\r\n#支撑起整个互联网时代的 7 款开源软件-2\r\n\r\nLinux可以说是已经无处不在，像Android手机就是以Linux为基础开发的，世界上大多的超级计算机也都采用的Linux系统，大多数的 数据中心使用Linux作为其支撑操作系统。谷歌、百度、淘宝等都通过Linuxt提供了我们每天用的互联网服务。Linux在航空控制系统中也扮演着重 要角色。\r\n\r\n###加密互联网的安全协议OpenSSL\r\n\r\nOpenSSL是套开放源代码的软件库包，实现了SSL与TLS协议。OpenSSL可以说是一个基于密码学的安全开发包，囊括了主要的密码算法、常用的密钥和证书封装管理功能以及SSL协议，并提供了丰富的应用程序供测试或其它目的使用。\r\n\r\n也可以说OpenSSL是网络通信提供安全及数据完整性的一种安全协议，SSL可以在Internet上提供秘密性传输，能使用户/服务器应用之间的通信不被攻击者窃听。OpenSSL被网银、在线支付、电商网站、门户网站、电子邮件等重要网站广泛使用。\r\n\r\n去年OpenSSL爆出安全漏洞，因为其应用如此之广，该漏洞爆出让整个互联网都为之震颤。\r\n\r\n### 互联网的记忆——MySQL\r\n\r\nMySQL是一个开源的小型的数据库管理系统，原开发者为瑞典的MySQL AB公司，该公司于2008年被Sun公司收购。2009年，甲骨文公司（Oracle）收购Sun公司，MySQL成为Oracle旗下产品。\r\n\r\n很多信息都是存在数据库里面的，很多工程师在开发一些的小型项目时都会采用这个MySQL数据库。MySQL为C、C++、JAVA、PHP等多重 编程语言提供了API接口。而且支持windows、Mac、Linux等多种系统。这种广泛的支持使其得到更多开发者的青睐，MySQL是开发者需要掌 握的数据库之一。\r\n\r\nMysql最初为小型应用而开发，但现在的Mysql已经不是一个小型数据库了。基本上所有的互联网公司都会使用这个数据库系统，一些金融交易也会 采用Mysql作为数据库引擎。Mysql通过相应的调优既可以支撑大规模的访问，又可以保证数据安全性，已经成为威胁传统商业数据库系统的重要力量。\r\n\r\n### 万能开发工具Eclipse\r\n\r\nEclipse 是一个开放源代码的、基于Java的可扩展开发平台。Eclipse最初由OTI和IBM两家公司的IDE产品开发组创建，起始于1999年4月。目前由 IBM牵头，围绕着Eclipse项目已经发展成为了一个庞大的Eclipse联盟，有150多家软件公司参与到Eclipse项目中，其中包括 Borland、Rational Software、Red Hat及Sybase等。\r\n\r\n就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。很多Java编程软件都是在Eclipse平台开发的，还有包括 Oracle在内的许多大公司也纷纷加入了该项目，并宣称Eclipse将来能成为可进行任何语言开发的IDE集大成者，使用者只需下载各种语言的插件即 可。\r\n\r\nEclipse并不是一个直接服务于消费者的产品，它更像一个工匠手中万用工具，用Eclipse开发者可以打造出各种充满创造性的服务来满足最终用户的需求。\r\n\r\n### 互联网的门卫Apache\r\n\r\nApache HTTP Server（简称Apache）是Apache软件基金会的一个开放源码的网页服务器，可以在大多数计算机操作系统中运行，由于其多平台和安全性被广泛 使用，也是最流行的Web服务器端软件之一，市场占有率达60%左右。它快速、可靠并且可通过简单的API扩展，它可以和各种解释器配合使用，包括 PHP/Perl/Python等。\r\n\r\nApache就像一个负责的门卫，管理着服务器数据的进出。每当你在你的地址栏里输入 http://XXX.com 的时候，在遥远的远端，很有可能正是一台跑着Apache的服务器，将你需要的信息传输给浏览器。\r\n\r\n###大数据的心脏Hadoop\r\n\r\nHadoop 是一个能够对大量数据进行分布式处理的软件框架，由Apache基金会开发。用户可以在不了解分布式底层细节的情况下，开发分布式程序。Hadoop 一 直帮助解决各种问题，包括超大型数据集的排序和大文件的搜索。它还是各种搜索引擎的核心，比如 Amazon 的 A9 和用于查找酒信息 的 Able Grape 垂直搜索引擎。阿里巴巴集团在商品推荐、用户行为分析、信用计算领域也都有hadoop的应用。\r\n\r\n在“大数据”已经成为潮流的当下，Hadoop已经成为最主要的一项技术。可以毫不夸张的说，没有Hadoop，就没有大多数的大数据应用。可以说对一个不知道Hadoop的程序员而言，你已经out了。\r\n\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)   Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading, Test link heading, [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n##### linux B-1\r\n\r\n###### linux B-1-1\r\n\r\n###### linux B-1-2\r\n\r\n##### linux B-2\r\n\r\n###### linux B-2-1\r\n\r\n###### linux B-2-2\r\n\r\n### 互联网的“排版引擎”WebKit\r\n\r\n说是浏览器内核，其实“排版引擎”更容易理解一些。通过服务器传输给浏览器的信息只是一串乱糟糟的文本。要看到我们平时看到精美的网友，需要浏览器内核对这些文本进行解析，将枯燥的描述“画”成美丽的浏览界面。\r\n\r\nWebKit 是一个开源的浏览器引擎，与之相应的引擎有 Gecko（Mozilla Firefox 等使用的排版引擎）和 Trident（也称为 MSHTML，IE 使用的排版引擎）。根据 StatCounter 的浏览器市场份额调查，于2012年11月，Webkit 市占超过了 40%，它已经成为拥有最大市场份额的 排版引擎，超越了 Internet Explorer 所使用的Trident 及 Firefox 所使用的 Gecko 引擎，并且 WebKit 份额正在逐年增加。\r\n\r\n目前几乎所有网站和网银已经逐渐支持 WebKit 。WebKit 内核在手机上的应用也十分广泛，例如苹果的 Safari 、谷歌的 Chrome 浏览器都是基于这个框架来开发的。\r\n\r\n### 小结\r\n\r\n很多人可能尚未意识到，我们使用的电脑中运行有开源软件，手机中运行有开源软件，家里的电视也运行有开源软件，甚至小小的数码产品中也运行有开源软件，尤其是互联网服务器端软件，几乎全部是开源软件。毫不夸张地说，开源软件已经渗透到了我们日常生活的方方面面。\r\n\r\n稿源：[钛媒体](http://www.tmtpost.com/194306.html)\r\n',16),
	(12,'### 为梦想而努力！\r\n#### 一线互联网码农，热衷探究技术背后的原理。喜欢情景喜剧、相声、小品，阅读，终生学习者。\r\n\r\n### 其他平台\r\n* Github：https://github.com/qcrao/Go-Questions\r\n* 博客园：https://www.cnblogs.com/qcrao-2018\r\n* 知乎主页：https://www.zhihu.com/people/raoquancheng/activities\r\n* 掘金：https://juejin.im/user/5b616fd35188251b3c3b408f\r\n* 微信公众号：码农桃花源\r\n\r\n### 联系我',17),
	(13,'### 为梦想而努力！\r\n#### 一线互联网码农，热衷探究技术背后的原理。喜欢情景喜剧、相声、小品，阅读，终生学习者。\r\n\r\n### 其他平台\r\n* Github：https://github.com/qcrao/Go-Questions\r\n* 博客园：https://www.cnblogs.com/qcrao-2018\r\n* 知乎主页：https://www.zhihu.com/people/raoquancheng/activities\r\n* 掘金：https://juejin.im/user/5b616fd35188251b3c3b408f\r\n* 微信公众号：码农桃花源\r\n\r\n### 联系我',18),
	(14,'# 支撑起整个互联网时代的 7 款开源软件\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n开源软件现在成为整个互联网时代的支撑技术，你可能已经无法离开由开源软件构建起来的网络世界了。下面我们就来看看一些最重要的开源技术。\r\n\r\n### 为互联网而生的操作系统linux\r\n\r\n```php\r\n<?php\r\n	echo 1;\r\n	die;\r\n?>\r\n```\r\n```json\r\n{\r\n\"a\" :\"b\"\r\n}\r\n```\r\n\r\n#### linux A\r\n\r\n它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳 定的多用户网络操作系统。这个系统是由全世界各地的成千上万的程序员设计和实现的。其目的是建立不受任何商品化软件的版权制约的、全世界都能自由使用的 Unix兼容产品。\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)   Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading, Test link heading, [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n##### linux B-1\r\n\r\n###### linux B-1-1\r\n\r\n###### linux B-1-2\r\n\r\n##### linux B-2\r\n\r\n###### linux B-2-1\r\n\r\n###### linux B-2-2\r\n\r\n#支撑起整个互联网时代的 7 款开源软件-2\r\n\r\nLinux可以说是已经无处不在，像Android手机就是以Linux为基础开发的，世界上大多的超级计算机也都采用的Linux系统，大多数的 数据中心使用Linux作为其支撑操作系统。谷歌、百度、淘宝等都通过Linuxt提供了我们每天用的互联网服务。Linux在航空控制系统中也扮演着重 要角色。\r\n\r\n###加密互联网的安全协议OpenSSL\r\n\r\nOpenSSL是套开放源代码的软件库包，实现了SSL与TLS协议。OpenSSL可以说是一个基于密码学的安全开发包，囊括了主要的密码算法、常用的密钥和证书封装管理功能以及SSL协议，并提供了丰富的应用程序供测试或其它目的使用。\r\n\r\n也可以说OpenSSL是网络通信提供安全及数据完整性的一种安全协议，SSL可以在Internet上提供秘密性传输，能使用户/服务器应用之间的通信不被攻击者窃听。OpenSSL被网银、在线支付、电商网站、门户网站、电子邮件等重要网站广泛使用。\r\n\r\n去年OpenSSL爆出安全漏洞，因为其应用如此之广，该漏洞爆出让整个互联网都为之震颤。\r\n\r\n### 互联网的记忆——MySQL\r\n\r\nMySQL是一个开源的小型的数据库管理系统，原开发者为瑞典的MySQL AB公司，该公司于2008年被Sun公司收购。2009年，甲骨文公司（Oracle）收购Sun公司，MySQL成为Oracle旗下产品。\r\n\r\n很多信息都是存在数据库里面的，很多工程师在开发一些的小型项目时都会采用这个MySQL数据库。MySQL为C、C++、JAVA、PHP等多重 编程语言提供了API接口。而且支持windows、Mac、Linux等多种系统。这种广泛的支持使其得到更多开发者的青睐，MySQL是开发者需要掌 握的数据库之一。\r\n\r\nMysql最初为小型应用而开发，但现在的Mysql已经不是一个小型数据库了。基本上所有的互联网公司都会使用这个数据库系统，一些金融交易也会 采用Mysql作为数据库引擎。Mysql通过相应的调优既可以支撑大规模的访问，又可以保证数据安全性，已经成为威胁传统商业数据库系统的重要力量。\r\n\r\n### 万能开发工具Eclipse\r\n\r\nEclipse 是一个开放源代码的、基于Java的可扩展开发平台。Eclipse最初由OTI和IBM两家公司的IDE产品开发组创建，起始于1999年4月。目前由 IBM牵头，围绕着Eclipse项目已经发展成为了一个庞大的Eclipse联盟，有150多家软件公司参与到Eclipse项目中，其中包括 Borland、Rational Software、Red Hat及Sybase等。\r\n\r\n就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。很多Java编程软件都是在Eclipse平台开发的，还有包括 Oracle在内的许多大公司也纷纷加入了该项目，并宣称Eclipse将来能成为可进行任何语言开发的IDE集大成者，使用者只需下载各种语言的插件即 可。\r\n\r\nEclipse并不是一个直接服务于消费者的产品，它更像一个工匠手中万用工具，用Eclipse开发者可以打造出各种充满创造性的服务来满足最终用户的需求。\r\n\r\n### 互联网的门卫Apache\r\n\r\nApache HTTP Server（简称Apache）是Apache软件基金会的一个开放源码的网页服务器，可以在大多数计算机操作系统中运行，由于其多平台和安全性被广泛 使用，也是最流行的Web服务器端软件之一，市场占有率达60%左右。它快速、可靠并且可通过简单的API扩展，它可以和各种解释器配合使用，包括 PHP/Perl/Python等。\r\n\r\nApache就像一个负责的门卫，管理着服务器数据的进出。每当你在你的地址栏里输入 http://XXX.com 的时候，在遥远的远端，很有可能正是一台跑着Apache的服务器，将你需要的信息传输给浏览器。\r\n\r\n###大数据的心脏Hadoop\r\n\r\nHadoop 是一个能够对大量数据进行分布式处理的软件框架，由Apache基金会开发。用户可以在不了解分布式底层细节的情况下，开发分布式程序。Hadoop 一 直帮助解决各种问题，包括超大型数据集的排序和大文件的搜索。它还是各种搜索引擎的核心，比如 Amazon 的 A9 和用于查找酒信息 的 Able Grape 垂直搜索引擎。阿里巴巴集团在商品推荐、用户行为分析、信用计算领域也都有hadoop的应用。\r\n\r\n在“大数据”已经成为潮流的当下，Hadoop已经成为最主要的一项技术。可以毫不夸张的说，没有Hadoop，就没有大多数的大数据应用。可以说对一个不知道Hadoop的程序员而言，你已经out了。\r\n\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)   Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading, Test link heading, [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n##### linux B-1\r\n\r\n###### linux B-1-1\r\n\r\n###### linux B-1-2\r\n\r\n##### linux B-2\r\n\r\n###### linux B-2-1\r\n\r\n###### linux B-2-2\r\n\r\n### 互联网的“排版引擎”WebKit\r\n\r\n说是浏览器内核，其实“排版引擎”更容易理解一些。通过服务器传输给浏览器的信息只是一串乱糟糟的文本。要看到我们平时看到精美的网友，需要浏览器内核对这些文本进行解析，将枯燥的描述“画”成美丽的浏览界面。\r\n\r\nWebKit 是一个开源的浏览器引擎，与之相应的引擎有 Gecko（Mozilla Firefox 等使用的排版引擎）和 Trident（也称为 MSHTML，IE 使用的排版引擎）。根据 StatCounter 的浏览器市场份额调查，于2012年11月，Webkit 市占超过了 40%，它已经成为拥有最大市场份额的 排版引擎，超越了 Internet Explorer 所使用的Trident 及 Firefox 所使用的 Gecko 引擎，并且 WebKit 份额正在逐年增加。\r\n\r\n目前几乎所有网站和网银已经逐渐支持 WebKit 。WebKit 内核在手机上的应用也十分广泛，例如苹果的 Safari 、谷歌的 Chrome 浏览器都是基于这个框架来开发的。\r\n\r\n### 小结\r\n\r\n很多人可能尚未意识到，我们使用的电脑中运行有开源软件，手机中运行有开源软件，家里的电视也运行有开源软件，甚至小小的数码产品中也运行有开源软件，尤其是互联网服务器端软件，几乎全部是开源软件。毫不夸张地说，开源软件已经渗透到了我们日常生活的方方面面。\r\n\r\n稿源：[钛媒体](http://www.tmtpost.com/194306.html)\r\n',19),
	(15,'# 支撑起整个互联网时代的 7 款开源软件\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n开源软件现在成为整个互联网时代的支撑技术，你可能已经无法离开由开源软件构建起来的网络世界了。下面我们就来看看一些最重要的开源技术。\r\n\r\n### 为互联网而生的操作系统linux\r\n\r\n```php\r\n<?php\r\n	echo 1;\r\n	die;\r\n?>\r\n```\r\n```json\r\n{\r\n\"a\" :\"b\"\r\n}\r\n```\r\n\r\n#### linux A\r\n\r\n它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳 定的多用户网络操作系统。这个系统是由全世界各地的成千上万的程序员设计和实现的。其目的是建立不受任何商品化软件的版权制约的、全世界都能自由使用的 Unix兼容产品。\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)   Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading, Test link heading, [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n##### linux B-1\r\n\r\n###### linux B-1-1\r\n\r\n###### linux B-1-2\r\n\r\n##### linux B-2\r\n\r\n###### linux B-2-1\r\n\r\n###### linux B-2-2\r\n\r\n#支撑起整个互联网时代的 7 款开源软件-2\r\n\r\nLinux可以说是已经无处不在，像Android手机就是以Linux为基础开发的，世界上大多的超级计算机也都采用的Linux系统，大多数的 数据中心使用Linux作为其支撑操作系统。谷歌、百度、淘宝等都通过Linuxt提供了我们每天用的互联网服务。Linux在航空控制系统中也扮演着重 要角色。\r\n\r\n###加密互联网的安全协议OpenSSL\r\n\r\nOpenSSL是套开放源代码的软件库包，实现了SSL与TLS协议。OpenSSL可以说是一个基于密码学的安全开发包，囊括了主要的密码算法、常用的密钥和证书封装管理功能以及SSL协议，并提供了丰富的应用程序供测试或其它目的使用。\r\n\r\n也可以说OpenSSL是网络通信提供安全及数据完整性的一种安全协议，SSL可以在Internet上提供秘密性传输，能使用户/服务器应用之间的通信不被攻击者窃听。OpenSSL被网银、在线支付、电商网站、门户网站、电子邮件等重要网站广泛使用。\r\n\r\n去年OpenSSL爆出安全漏洞，因为其应用如此之广，该漏洞爆出让整个互联网都为之震颤。\r\n\r\n### 互联网的记忆——MySQL\r\n\r\nMySQL是一个开源的小型的数据库管理系统，原开发者为瑞典的MySQL AB公司，该公司于2008年被Sun公司收购。2009年，甲骨文公司（Oracle）收购Sun公司，MySQL成为Oracle旗下产品。\r\n\r\n很多信息都是存在数据库里面的，很多工程师在开发一些的小型项目时都会采用这个MySQL数据库。MySQL为C、C++、JAVA、PHP等多重 编程语言提供了API接口。而且支持windows、Mac、Linux等多种系统。这种广泛的支持使其得到更多开发者的青睐，MySQL是开发者需要掌 握的数据库之一。\r\n\r\nMysql最初为小型应用而开发，但现在的Mysql已经不是一个小型数据库了。基本上所有的互联网公司都会使用这个数据库系统，一些金融交易也会 采用Mysql作为数据库引擎。Mysql通过相应的调优既可以支撑大规模的访问，又可以保证数据安全性，已经成为威胁传统商业数据库系统的重要力量。\r\n\r\n### 万能开发工具Eclipse\r\n\r\nEclipse 是一个开放源代码的、基于Java的可扩展开发平台。Eclipse最初由OTI和IBM两家公司的IDE产品开发组创建，起始于1999年4月。目前由 IBM牵头，围绕着Eclipse项目已经发展成为了一个庞大的Eclipse联盟，有150多家软件公司参与到Eclipse项目中，其中包括 Borland、Rational Software、Red Hat及Sybase等。\r\n\r\n就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。很多Java编程软件都是在Eclipse平台开发的，还有包括 Oracle在内的许多大公司也纷纷加入了该项目，并宣称Eclipse将来能成为可进行任何语言开发的IDE集大成者，使用者只需下载各种语言的插件即 可。\r\n\r\nEclipse并不是一个直接服务于消费者的产品，它更像一个工匠手中万用工具，用Eclipse开发者可以打造出各种充满创造性的服务来满足最终用户的需求。\r\n\r\n### 互联网的门卫Apache\r\n\r\nApache HTTP Server（简称Apache）是Apache软件基金会的一个开放源码的网页服务器，可以在大多数计算机操作系统中运行，由于其多平台和安全性被广泛 使用，也是最流行的Web服务器端软件之一，市场占有率达60%左右。它快速、可靠并且可通过简单的API扩展，它可以和各种解释器配合使用，包括 PHP/Perl/Python等。\r\n\r\nApache就像一个负责的门卫，管理着服务器数据的进出。每当你在你的地址栏里输入 http://XXX.com 的时候，在遥远的远端，很有可能正是一台跑着Apache的服务器，将你需要的信息传输给浏览器。\r\n\r\n###大数据的心脏Hadoop\r\n\r\nHadoop 是一个能够对大量数据进行分布式处理的软件框架，由Apache基金会开发。用户可以在不了解分布式底层细节的情况下，开发分布式程序。Hadoop 一 直帮助解决各种问题，包括超大型数据集的排序和大文件的搜索。它还是各种搜索引擎的核心，比如 Amazon 的 A9 和用于查找酒信息 的 Able Grape 垂直搜索引擎。阿里巴巴集团在商品推荐、用户行为分析、信用计算领域也都有hadoop的应用。\r\n\r\n在“大数据”已经成为潮流的当下，Hadoop已经成为最主要的一项技术。可以毫不夸张的说，没有Hadoop，就没有大多数的大数据应用。可以说对一个不知道Hadoop的程序员而言，你已经out了。\r\n\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)   Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading, Test link heading, [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n##### linux B-1\r\n\r\n###### linux B-1-1\r\n\r\n###### linux B-1-2\r\n\r\n##### linux B-2\r\n\r\n###### linux B-2-1\r\n\r\n###### linux B-2-2\r\n\r\n### 互联网的“排版引擎”WebKit\r\n\r\n说是浏览器内核，其实“排版引擎”更容易理解一些。通过服务器传输给浏览器的信息只是一串乱糟糟的文本。要看到我们平时看到精美的网友，需要浏览器内核对这些文本进行解析，将枯燥的描述“画”成美丽的浏览界面。\r\n\r\nWebKit 是一个开源的浏览器引擎，与之相应的引擎有 Gecko（Mozilla Firefox 等使用的排版引擎）和 Trident（也称为 MSHTML，IE 使用的排版引擎）。根据 StatCounter 的浏览器市场份额调查，于2012年11月，Webkit 市占超过了 40%，它已经成为拥有最大市场份额的 排版引擎，超越了 Internet Explorer 所使用的Trident 及 Firefox 所使用的 Gecko 引擎，并且 WebKit 份额正在逐年增加。\r\n\r\n目前几乎所有网站和网银已经逐渐支持 WebKit 。WebKit 内核在手机上的应用也十分广泛，例如苹果的 Safari 、谷歌的 Chrome 浏览器都是基于这个框架来开发的。\r\n\r\n### 小结\r\n\r\n很多人可能尚未意识到，我们使用的电脑中运行有开源软件，手机中运行有开源软件，家里的电视也运行有开源软件，甚至小小的数码产品中也运行有开源软件，尤其是互联网服务器端软件，几乎全部是开源软件。毫不夸张地说，开源软件已经渗透到了我们日常生活的方方面面。\r\n\r\n稿源：[钛媒体](http://www.tmtpost.com/194306.html)\r\n',20),
	(16,'# 支撑起整个互联网时代的 7 款开源软件\r\n\r\n[TOCM]\r\n\r\n[TOC]\r\n\r\n开源软件现在成为整个互联网时代的支撑技术，你可能已经无法离开由开源软件构建起来的网络世界了。下面我们就来看看一些最重要的开源技术。\r\n\r\n### 为互联网而生的操作系统linux\r\n\r\n```php\r\n<?php\r\n	echo 1;\r\n	die;\r\n?>\r\n```\r\n```json\r\n{\r\n\"a\" :\"b\"\r\n}\r\n```\r\n\r\n#### linux A\r\n\r\n它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳 定的多用户网络操作系统。这个系统是由全世界各地的成千上万的程序员设计和实现的。其目的是建立不受任何商品化软件的版权制约的、全世界都能自由使用的 Unix兼容产品。\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)   Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading, Test link heading, [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n##### linux B-1\r\n\r\n###### linux B-1-1\r\n\r\n###### linux B-1-2\r\n\r\n##### linux B-2\r\n\r\n###### linux B-2-1\r\n\r\n###### linux B-2-2\r\n\r\n#支撑起整个互联网时代的 7 款开源软件-2\r\n\r\nLinux可以说是已经无处不在，像Android手机就是以Linux为基础开发的，世界上大多的超级计算机也都采用的Linux系统，大多数的 数据中心使用Linux作为其支撑操作系统。谷歌、百度、淘宝等都通过Linuxt提供了我们每天用的互联网服务。Linux在航空控制系统中也扮演着重 要角色。\r\n\r\n###加密互联网的安全协议OpenSSL\r\n\r\nOpenSSL是套开放源代码的软件库包，实现了SSL与TLS协议。OpenSSL可以说是一个基于密码学的安全开发包，囊括了主要的密码算法、常用的密钥和证书封装管理功能以及SSL协议，并提供了丰富的应用程序供测试或其它目的使用。\r\n\r\n也可以说OpenSSL是网络通信提供安全及数据完整性的一种安全协议，SSL可以在Internet上提供秘密性传输，能使用户/服务器应用之间的通信不被攻击者窃听。OpenSSL被网银、在线支付、电商网站、门户网站、电子邮件等重要网站广泛使用。\r\n\r\n去年OpenSSL爆出安全漏洞，因为其应用如此之广，该漏洞爆出让整个互联网都为之震颤。\r\n\r\n### 互联网的记忆——MySQL\r\n\r\nMySQL是一个开源的小型的数据库管理系统，原开发者为瑞典的MySQL AB公司，该公司于2008年被Sun公司收购。2009年，甲骨文公司（Oracle）收购Sun公司，MySQL成为Oracle旗下产品。\r\n\r\n很多信息都是存在数据库里面的，很多工程师在开发一些的小型项目时都会采用这个MySQL数据库。MySQL为C、C++、JAVA、PHP等多重 编程语言提供了API接口。而且支持windows、Mac、Linux等多种系统。这种广泛的支持使其得到更多开发者的青睐，MySQL是开发者需要掌 握的数据库之一。\r\n\r\nMysql最初为小型应用而开发，但现在的Mysql已经不是一个小型数据库了。基本上所有的互联网公司都会使用这个数据库系统，一些金融交易也会 采用Mysql作为数据库引擎。Mysql通过相应的调优既可以支撑大规模的访问，又可以保证数据安全性，已经成为威胁传统商业数据库系统的重要力量。\r\n\r\n### 万能开发工具Eclipse\r\n\r\nEclipse 是一个开放源代码的、基于Java的可扩展开发平台。Eclipse最初由OTI和IBM两家公司的IDE产品开发组创建，起始于1999年4月。目前由 IBM牵头，围绕着Eclipse项目已经发展成为了一个庞大的Eclipse联盟，有150多家软件公司参与到Eclipse项目中，其中包括 Borland、Rational Software、Red Hat及Sybase等。\r\n\r\n就其本身而言，它只是一个框架和一组服务，用于通过插件组件构建开发环境。很多Java编程软件都是在Eclipse平台开发的，还有包括 Oracle在内的许多大公司也纷纷加入了该项目，并宣称Eclipse将来能成为可进行任何语言开发的IDE集大成者，使用者只需下载各种语言的插件即 可。\r\n\r\nEclipse并不是一个直接服务于消费者的产品，它更像一个工匠手中万用工具，用Eclipse开发者可以打造出各种充满创造性的服务来满足最终用户的需求。\r\n\r\n### 互联网的门卫Apache\r\n\r\nApache HTTP Server（简称Apache）是Apache软件基金会的一个开放源码的网页服务器，可以在大多数计算机操作系统中运行，由于其多平台和安全性被广泛 使用，也是最流行的Web服务器端软件之一，市场占有率达60%左右。它快速、可靠并且可通过简单的API扩展，它可以和各种解释器配合使用，包括 PHP/Perl/Python等。\r\n\r\nApache就像一个负责的门卫，管理着服务器数据的进出。每当你在你的地址栏里输入 http://XXX.com 的时候，在遥远的远端，很有可能正是一台跑着Apache的服务器，将你需要的信息传输给浏览器。\r\n\r\n###大数据的心脏Hadoop\r\n\r\nHadoop 是一个能够对大量数据进行分布式处理的软件框架，由Apache基金会开发。用户可以在不了解分布式底层细节的情况下，开发分布式程序。Hadoop 一 直帮助解决各种问题，包括超大型数据集的排序和大文件的搜索。它还是各种搜索引擎的核心，比如 Amazon 的 A9 和用于查找酒信息 的 Able Grape 垂直搜索引擎。阿里巴巴集团在商品推荐、用户行为分析、信用计算领域也都有hadoop的应用。\r\n\r\n在“大数据”已经成为潮流的当下，Hadoop已经成为最主要的一项技术。可以毫不夸张的说，没有Hadoop，就没有大多数的大数据应用。可以说对一个不知道Hadoop的程序员而言，你已经out了。\r\n\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n#### Test link heading [linux B](https://github.com/pandao/editor.md)   Test link heading [linux B](https://github.com/pandao/editor.md)  Test link heading, Test link heading, [linux B](https://github.com/pandao/editor.md)  Test link heading\r\n\r\n##### linux B-1\r\n\r\n###### linux B-1-1\r\n\r\n###### linux B-1-2\r\n\r\n##### linux B-2\r\n\r\n###### linux B-2-1\r\n\r\n###### linux B-2-2\r\n\r\n### 互联网的“排版引擎”WebKit\r\n\r\n说是浏览器内核，其实“排版引擎”更容易理解一些。通过服务器传输给浏览器的信息只是一串乱糟糟的文本。要看到我们平时看到精美的网友，需要浏览器内核对这些文本进行解析，将枯燥的描述“画”成美丽的浏览界面。\r\n\r\nWebKit 是一个开源的浏览器引擎，与之相应的引擎有 Gecko（Mozilla Firefox 等使用的排版引擎）和 Trident（也称为 MSHTML，IE 使用的排版引擎）。根据 StatCounter 的浏览器市场份额调查，于2012年11月，Webkit 市占超过了 40%，它已经成为拥有最大市场份额的 排版引擎，超越了 Internet Explorer 所使用的Trident 及 Firefox 所使用的 Gecko 引擎，并且 WebKit 份额正在逐年增加。\r\n\r\n目前几乎所有网站和网银已经逐渐支持 WebKit 。WebKit 内核在手机上的应用也十分广泛，例如苹果的 Safari 、谷歌的 Chrome 浏览器都是基于这个框架来开发的。\r\n\r\n### 小结\r\n\r\n很多人可能尚未意识到，我们使用的电脑中运行有开源软件，手机中运行有开源软件，家里的电视也运行有开源软件，甚至小小的数码产品中也运行有开源软件，尤其是互联网服务器端软件，几乎全部是开源软件。毫不夸张地说，开源软件已经渗透到了我们日常生活的方方面面。\r\n\r\n稿源：[钛媒体](http://www.tmtpost.com/194306.html)\r\n',21);

/*!40000 ALTER TABLE `post_content` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table tag
# ------------------------------------------------------------

DROP TABLE IF EXISTS `tag`;

CREATE TABLE `tag` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL DEFAULT '',
  `count` int(11) NOT NULL DEFAULT '0',
  `created_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `updated_at` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

LOCK TABLES `tag` WRITE;
/*!40000 ALTER TABLE `tag` DISABLE KEYS */;

INSERT INTO `tag` (`id`, `name`, `count`, `created_at`, `updated_at`)
VALUES
	(1,'PHP',1,'2021-08-15 22:20:14','2021-08-15 22:20:17'),
	(2,'Go',2,'2021-08-15 23:39:18','2021-08-15 23:39:18'),
	(3,'Nginx',1,'2021-08-15 23:39:26','2021-08-15 23:39:26'),
	(4,'Mysql',1,'2021-08-15 23:39:33','2021-08-15 23:39:33'),
	(5,'Redis',1,'2021-08-15 23:39:40','2021-08-15 23:39:40'),
	(6,'Kafka',1,'2021-08-15 23:39:46','2021-08-15 23:39:46'),
	(7,'ElasticSearch',1,'2021-08-15 23:39:58','2021-08-17 22:17:40'),
	(8,'Mogodb',1,'2021-08-17 22:17:39','2021-08-17 22:17:41'),
	(9,'Java',1,'2021-08-17 22:17:50','2021-08-17 22:17:50'),
	(10,'Memcache',1,'2021-08-17 22:18:02','2021-08-17 22:18:02'),
	(11,'Laravel',1,'2021-08-17 22:19:13','2021-08-17 22:19:13'),
	(12,'ELK',1,'2021-08-17 22:19:20','2021-08-17 22:19:20'),
	(13,'haha',0,'2021-09-05 00:37:06','2021-09-05 00:37:56'),
	(14,'hehe',0,'2021-09-05 00:37:14','2021-09-05 00:37:57'),
	(15,'go',0,'2021-09-05 00:38:44','2021-09-05 00:38:44'),
	(16,'go',0,'2021-09-05 00:38:44','2021-09-05 00:38:44'),
	(17,'go',0,'2021-09-05 00:38:44','2021-09-05 00:38:44'),
	(18,'a',0,'2021-09-05 00:43:03','2021-09-05 00:43:03');

/*!40000 ALTER TABLE `tag` ENABLE KEYS */;
UNLOCK TABLES;


# Dump of table user
# ------------------------------------------------------------

DROP TABLE IF EXISTS `user`;

CREATE TABLE `user` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `email` varchar(50) NOT NULL DEFAULT '',
  `password` varchar(128) NOT NULL DEFAULT '',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;

INSERT INTO `user` (`id`, `email`, `password`)
VALUES
	(1,'admin@convee.cn','$2a$08$Y6d32US/4pvvPR9Pau1tp.YYe.w0pUM3f7GRuSR8FfSmbJVoAOTGO');

/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;



/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
